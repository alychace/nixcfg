name: "nix-build"
on:
  push:
    paths-ignore:
      - '**/*.md'
      - '.github/**'
      - '_img/**'
  workflow_dispatch:
jobs:
  adjustor-build:
    if: contains(github.event.head_commit.message, 'pkgs/') || contains(github.event.head_commit.message, 'flake.nix') || contains(github.event.head_commit.message, 'flake.lock')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build default package
        run: nix build --accept-flake-config .#packages.x86_64-linux.adjustor
  clean-install-build:
    if: contains(github.event.head_commit.message, 'flake/') || contains(github.event.head_commit.message, 'flake.nix') || contains(github.event.head_commit.message, 'flake.lock')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build default package
        run: nix build --accept-flake-config .#packages.x86_64-linux.clean-install
  hhd-ui-build:
    if: contains(github.event.head_commit.message, 'pkgs/') || contains(github.event.head_commit.message, 'flake.nix') || contains(github.event.head_commit.message, 'flake.lock')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build default package
        run: nix build --accept-flake-config .#packages.x86_64-linux.hhd-ui
  rofi-bluetooth-build:
    if: contains(github.event.head_commit.message, 'pkgs/') || contains(github.event.head_commit.message, 'flake.nix') || contains(github.event.head_commit.message, 'flake.lock')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build default package
        run: nix build --accept-flake-config .#packages.x86_64-linux.rofi-bluetooth
  fallarbor-build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build fallarbor
        run: nix build --accept-flake-config .#nixosConfigurations.fallarbor.config.system.build.toplevel
  lavaridge-build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build lavaridge
        run: nix build --accept-flake-config .#nixosConfigurations.lavaridge.config.system.build.toplevel
  mauville-build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build mauville
        run: nix build --accept-flake-config .#nixosConfigurations.mauville.config.system.build.toplevel
  pacifidlog-build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build pacifidlog
        run: nix build --accept-flake-config .#nixosConfigurations.pacifidlog.config.system.build.toplevel
  rustboro-build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build rustboro
        run: nix build --accept-flake-config .#nixosConfigurations.rustboro.config.system.build.toplevel
  slateport-build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
      - uses: actions/checkout@main
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@master
        with:
          name: alyraffauf
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build slateport
        run: nix build --accept-flake-config .#nixosConfigurations.slateport.config.system.build.toplevel